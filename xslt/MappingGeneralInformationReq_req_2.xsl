<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/MappingGeneralInformationReq_req_2.map" md5sum="8e0db9b2611f5408baa6b15febb6da96" version="8.0.400" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		MappingGeneralInformationReq_req_2.map
*   Map declaration(s):	MappingGeneralInformationReq_req_2
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FRemittance_JDBC_Common_Toolkit_Library%252FGeneralInformationIntf%257DupsertGeneralInformationRequestMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FRemittance_JDBC_Common_Toolkit_Implementation%252FJDBCImport%257DupsertBpm_Sor_RemittanceGeneral_InformationBGRequestMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:math="http://exslt.org/math"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:exsl="http://exslt.org/common"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:in2="http://TCBT24Library"
    xmlns:in4="wsdl.http://Remittance_JDBC_Common_Toolkit_Library/GeneralInformationIntf"
    xmlns:in3="http://Remittance_JDBC_Common_Toolkit_Library/GeneralInformationIntf"
    xmlns:io5="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io2="http://www.w3.org/2005/08/addressing"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:in5="http://Remittance_JDBC_Common_Toolkit_Library/InsertRemittanceCase"
    xmlns:in6="http://RJDBCCT"
    xmlns:in="http://RSD"
    xmlns:io="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:out7="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionlist"
    xmlns:out6="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocument"
    xmlns:out9="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationlist"
    xmlns:out8="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_status"
    xmlns:out48="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historybg"
    xmlns:out3="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionbg"
    xmlns:out11="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionupdateallinput"
    xmlns:out49="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationcontainer"
    xmlns:out12="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historycontainer"
    xmlns:out2="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statuslist"
    xmlns:out46="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationbg"
    xmlns:out5="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historyupdateallinputbg"
    xmlns:out47="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipbg"
    xmlns:out4="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentbatchresult"
    xmlns:out10="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionupdateallinputbg"
    xmlns:out41="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentbg"
    xmlns:out19="http://com/ibm/j2ca/fault"
    xmlns:out40="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historyupdateallinput"
    xmlns:out18="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationlistbg"
    xmlns:out17="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statuscontainer"
    xmlns:out80="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipupdateallinputbg"
    xmlns:out45="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationcontainer"
    xmlns:out16="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationlist"
    xmlns:out81="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationbg"
    xmlns:out44="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/existsresult/existsresult"
    xmlns:out15="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationupdateallinput"
    xmlns:out14="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentlistbg"
    xmlns:out43="http://com/ibm/j2ca/fault/afcfault"
    xmlns:out13="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bulkoperationresult/deleteallresult"
    xmlns:out42="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshiplistbg"
    xmlns:out84="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historyupdateallinputbg"
    xmlns:out85="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationlistbg"
    xmlns:out82="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_history"
    xmlns:out83="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historylistbg"
    xmlns:out88="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_info"
    xmlns:out86="wsdl.http://Remittance_JDBC_Common_Toolkit_Implementation/JDBCImport"
    xmlns:out87="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historybg"
    xmlns:out57="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_information"
    xmlns:out58="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipupdateallinput"
    xmlns:out59="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infobg"
    xmlns:out50="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationupdateallinput"
    xmlns:out52="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationship"
    xmlns:out51="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historybatchresult"
    xmlns:out54="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationlist"
    xmlns:out53="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusupdateallinputbg"
    xmlns:out56="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationupdateallinputbg"
    xmlns:out55="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infoupdateallinputbg"
    xmlns:out69="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infolistbg"
    xmlns:out68="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infobatchresult"
    xmlns:out28="http://Remittance_JDBC_Common_Toolkit_Implementation/JDBCImport"
    xmlns:out29="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationupdateallinputbg"
    xmlns:out26="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historylist"
    xmlns:out27="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_information"
    xmlns:out24="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bulkoperationresult/updateallresult"
    xmlns:out25="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationlistbg"
    xmlns:out23="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionbatchresult"
    xmlns:out22="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationbg"
    xmlns:out21="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_history"
    xmlns:out20="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationupdateallinput"
    xmlns:out66="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infocontainer"
    xmlns:out67="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationbatchresult"
    xmlns:out64="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentupdateallinput"
    xmlns:out65="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentcontainer"
    xmlns:out62="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationbatchresult"
    xmlns:out63="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationupdateallinputbg"
    xmlns:out60="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infolist"
    xmlns:out61="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusbatchresult"
    xmlns:out79="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historycontainer"
    xmlns:out39="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusbg"
    xmlns:out35="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactioncontainer"
    xmlns:out36="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historyupdateallinput"
    xmlns:out37="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statuslistbg"
    xmlns:out38="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infoupdateallinput"
    xmlns:out32="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historylistbg"
    xmlns:out31="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationcontainer"
    xmlns:out34="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionlistbg"
    xmlns:out70="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:out33="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipbatchresult"
    xmlns:out30="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshiplist"
    xmlns:out75="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historylist"
    xmlns:out76="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationbatchresult"
    xmlns:out77="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentupdateallinputbg"
    xmlns:out78="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipcontainer"
    xmlns:out71="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historybatchresult"
    xmlns:out72="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusupdateallinput"
    xmlns:out73="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentlist"
    xmlns:out74="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transaction"
    xmlns:out="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_information"
    xmlns:in7="http://Remittance_JDBC_Common_Toolkit_Library/InsertRemittanceTransaction"
    xmlns:in9="http://Remittance_JDBC_Common_Toolkit_Library/GeneralInformationInt"
    xmlns:in8="wsdl.http://Remittance_JDBC_Common_Toolkit_Library/GeneralInformationInt"
    xmlns:map="http://RemJDBCModule/xslt/MappingGeneralInformationReq_req_2"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="math str set date exsl map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'out86:upsertBpm_Sor_RemittanceGeneral_InformationBGRequestMsg'"/>
            </xsl:attribute>
            <xsl:call-template name="map:MappingGeneralInformationReq_req_22">
              <xsl:with-param name="body" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="body" mode="map:MappingGeneralInformationReq_req_2"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:MappingGeneralInformationReq_req_2">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out86:upsertBpm_Sor_RemittanceGeneral_InformationBGRequestMsg'"/>
      </xsl:attribute>
      <out28:upsertBpm_Sor_RemittanceGeneral_InformationBG>
        <out28:upsertBpm_Sor_RemittanceGeneral_InformationBGInput>
          <!-- a structural mapping: "in3:upsertGeneralInformation/input1/generalInformation"(GeneralInformation) to "Bpm_Sor_RemittanceGeneral_Information"(Bpm_Sor_RemittanceGeneral_Information) -->
          <xsl:apply-templates select="in3:upsertGeneralInformation/input1/generalInformation" mode="localGeneralInformationToBpm_Sor_RemittanceGeneral_Information_860800781"/>
        </out28:upsertBpm_Sor_RemittanceGeneral_InformationBGInput>
      </out28:upsertBpm_Sor_RemittanceGeneral_InformationBG>
    </body>
  </xsl:template>

  <!-- This rule represents a type mapping: "body" to "body".  -->
  <xsl:template name="map:MappingGeneralInformationReq_req_22">
    <xsl:param name="body"/>
    <out28:upsertBpm_Sor_RemittanceGeneral_InformationBG>
      <out28:upsertBpm_Sor_RemittanceGeneral_InformationBGInput>
        <!-- a structural mapping: "$body/in3:upsertGeneralInformation/input1/generalInformation"(GeneralInformation) to "Bpm_Sor_RemittanceGeneral_Information"(Bpm_Sor_RemittanceGeneral_Information) -->
        <xsl:apply-templates select="$body/in3:upsertGeneralInformation/input1/generalInformation" mode="localGeneralInformationToBpm_Sor_RemittanceGeneral_Information_860800781"/>
      </out28:upsertBpm_Sor_RemittanceGeneral_InformationBGInput>
    </out28:upsertBpm_Sor_RemittanceGeneral_InformationBG>
  </xsl:template>

  <!-- This rule represents an element mapping: "generalInformation" to "Bpm_Sor_RemittanceGeneral_Information".  -->
  <xsl:template match="generalInformation"  mode="localGeneralInformationToBpm_Sor_RemittanceGeneral_Information_860800781">
    <Bpm_Sor_RemittanceGeneral_Information>
      <!-- a simple data mapping: "branchName"(string) to "branch_name"(string) -->
      <xsl:if test="branchName">
        <xsl:choose>
          <xsl:when test="normalize-space(branchName)">
            <branch_name>
              <xsl:value-of select="branchName"/>
            </branch_name>
          </xsl:when>
          <xsl:otherwise>
            <branch_name xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "branchCode"(string) to "branch_code"(string) -->
      <xsl:if test="branchCode">
        <xsl:choose>
          <xsl:when test="normalize-space(branchCode)">
            <branch_code>
              <xsl:value-of select="branchCode"/>
            </branch_code>
          </xsl:when>
          <xsl:otherwise>
            <branch_code xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerId"(int) to "customer_id"(decimal) -->
      <xsl:if test="customerId">
        <xsl:choose>
          <xsl:when test="normalize-space(string(customerId))">
            <customer_id>
              <xsl:value-of select="customerId"/>
            </customer_id>
          </xsl:when>
          <xsl:otherwise>
            <customer_id xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerName"(string) to "customer_name"(string) -->
      <xsl:if test="customerName">
        <xsl:choose>
          <xsl:when test="normalize-space(customerName)">
            <customer_name>
              <xsl:value-of select="customerName"/>
            </customer_name>
          </xsl:when>
          <xsl:otherwise>
            <customer_name xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerEmail"(string) to "customer_email"(string) -->
      <xsl:if test="customerEmail">
        <xsl:choose>
          <xsl:when test="normalize-space(customerEmail)">
            <customer_email>
              <xsl:value-of select="customerEmail"/>
            </customer_email>
          </xsl:when>
          <xsl:otherwise>
            <customer_email xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerAddress"(string) to "customer_address"(string) -->
      <xsl:if test="customerAddress">
        <xsl:choose>
          <xsl:when test="normalize-space(customerAddress)">
            <customer_address>
              <xsl:value-of select="customerAddress"/>
            </customer_address>
          </xsl:when>
          <xsl:otherwise>
            <customer_address xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerLevel"(string) to "customer_level"(string) -->
      <xsl:if test="customerLevel">
        <xsl:choose>
          <xsl:when test="normalize-space(customerLevel)">
            <customer_level>
              <xsl:value-of select="customerLevel"/>
            </customer_level>
          </xsl:when>
          <xsl:otherwise>
            <customer_level xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "enterpriseScope"(string) to "enterprise_scope"(string) -->
      <xsl:if test="enterpriseScope">
        <xsl:choose>
          <xsl:when test="normalize-space(enterpriseScope)">
            <enterprise_scope>
              <xsl:value-of select="enterpriseScope"/>
            </enterprise_scope>
          </xsl:when>
          <xsl:otherwise>
            <enterprise_scope xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerType"(string) to "customer_type"(string) -->
      <xsl:if test="customerType">
        <xsl:choose>
          <xsl:when test="normalize-space(customerType)">
            <customer_type>
              <xsl:value-of select="customerType"/>
            </customer_type>
          </xsl:when>
          <xsl:otherwise>
            <customer_type xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerNote"(string) to "customer_note"(string) -->
      <xsl:if test="customerNote">
        <xsl:choose>
          <xsl:when test="normalize-space(customerNote)">
            <customer_note>
              <xsl:value-of select="customerNote"/>
            </customer_note>
          </xsl:when>
          <xsl:otherwise>
            <customer_note xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "paymentChannel"(string) to "payment_channel"(string) -->
      <xsl:if test="paymentChannel">
        <xsl:choose>
          <xsl:when test="normalize-space(paymentChannel)">
            <payment_channel>
              <xsl:value-of select="paymentChannel"/>
            </payment_channel>
          </xsl:when>
          <xsl:otherwise>
            <payment_channel xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "customerOrderDateTime"(dateTime) to "customer_order_date_time"(dateTime) -->
      <xsl:if test="customerOrderDateTime">
        <xsl:choose>
          <xsl:when test="normalize-space(string(customerOrderDateTime))">
            <customer_order_date_time>
              <xsl:value-of select="customerOrderDateTime"/>
            </customer_order_date_time>
          </xsl:when>
          <xsl:otherwise>
            <customer_order_date_time xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "paymentSource"(string) to "payment_source"(string) -->
      <xsl:if test="paymentSource">
        <xsl:choose>
          <xsl:when test="normalize-space(paymentSource)">
            <payment_source>
              <xsl:value-of select="paymentSource"/>
            </payment_source>
          </xsl:when>
          <xsl:otherwise>
            <payment_source xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "enterprisePaymentApproval"(string) to "enterprise_payment__approval"(string) -->
      <xsl:if test="enterprisePaymentApproval">
        <xsl:choose>
          <xsl:when test="normalize-space(enterprisePaymentApproval)">
            <enterprise_payment__approval>
              <xsl:value-of select="enterprisePaymentApproval"/>
            </enterprise_payment__approval>
          </xsl:when>
          <xsl:otherwise>
            <enterprise_payment__approval xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "commentCol"(string) to "comment_col"(string) -->
      <xsl:if test="commentCol">
        <xsl:choose>
          <xsl:when test="normalize-space(commentCol)">
            <comment_col>
              <xsl:value-of select="commentCol"/>
            </comment_col>
          </xsl:when>
          <xsl:otherwise>
            <comment_col xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "amountNumber"(int) to "amount_number"(decimal) -->
      <xsl:if test="amountNumber">
        <xsl:choose>
          <xsl:when test="normalize-space(string(amountNumber))">
            <amount_number>
              <xsl:value-of select="amountNumber"/>
            </amount_number>
          </xsl:when>
          <xsl:otherwise>
            <amount_number xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "currencyType"(string) to "currency_type"(string) -->
      <xsl:if test="currencyType">
        <xsl:choose>
          <xsl:when test="normalize-space(currencyType)">
            <currency_type>
              <xsl:value-of select="currencyType"/>
            </currency_type>
          </xsl:when>
          <xsl:otherwise>
            <currency_type xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "multiForeignCurrencyTrans"(int) to "multi_foreign_currency_trans"(decimal) -->
      <xsl:if test="multiForeignCurrencyTrans">
        <xsl:choose>
          <xsl:when test="normalize-space(string(multiForeignCurrencyTrans))">
            <multi_foreign_currency_trans>
              <xsl:value-of select="multiForeignCurrencyTrans"/>
            </multi_foreign_currency_trans>
          </xsl:when>
          <xsl:otherwise>
            <multi_foreign_currency_trans xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "equivalentUsdAmount"(int) to "equivalent_usd_amount"(decimal) -->
      <xsl:if test="equivalentUsdAmount">
        <xsl:choose>
          <xsl:when test="normalize-space(string(equivalentUsdAmount))">
            <equivalent_usd_amount>
              <xsl:value-of select="equivalentUsdAmount"/>
            </equivalent_usd_amount>
          </xsl:when>
          <xsl:otherwise>
            <equivalent_usd_amount xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
      <!-- a simple data mapping: "id"(string) to "id"(string) -->
      <xsl:if test="id">
        <xsl:choose>
          <xsl:when test="normalize-space(id)">
            <id>
              <xsl:value-of select="id"/>
            </id>
          </xsl:when>
          <xsl:otherwise>
            <id xsi:nil="true"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
    </Bpm_Sor_RemittanceGeneral_Information>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
