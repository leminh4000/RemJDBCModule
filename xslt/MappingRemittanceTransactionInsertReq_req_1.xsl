<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/MappingRemittanceTransactionInsertReq_req_1.map" md5sum="3e5947ea1348ac898825274e305d3137" version="8.0.400" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		MappingRemittanceTransactionInsertReq_req_1.map
*   Map declaration(s):	MappingRemittanceTransactionInsertReq_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FRemittance_JDBC_Common_Toolkit_Library%252FRemittanceTransactionIntf%257DinsertMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FRemittance_JDBC_Common_Toolkit_Implementation%252FJDBCImport%257DcreateBpm_Sor_RemittanceRemittance_TransactionBGRequestMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:math="http://exslt.org/math"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:exsl="http://exslt.org/common"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:in2="http://RSD"
    xmlns:in4="http://TCBT24Library"
    xmlns:in3="http://Remittance_JDBC_Common_Toolkit_Library/InsertRemittanceTransaction"
    xmlns:io5="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io2="http://www.w3.org/2005/08/addressing"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:in5="http://Remittance_JDBC_Common_Toolkit_Library/RemittanceTransactionIntf"
    xmlns:in6="wsdl.http://Remittance_JDBC_Common_Toolkit_Library/RemittanceTransactionIntf"
    xmlns:in="http://TCBOR"
    xmlns:io="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:out7="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationlist"
    xmlns:out6="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionlist"
    xmlns:out9="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionupdateallinputbg"
    xmlns:out8="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_status"
    xmlns:out48="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:out11="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bulkoperationresult/deleteallresult"
    xmlns:out3="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionbg"
    xmlns:out49="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusupdateallinput"
    xmlns:out12="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentlistbg"
    xmlns:out2="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statuslist"
    xmlns:out46="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentcontainer"
    xmlns:out5="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocument"
    xmlns:out47="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationbatchresult"
    xmlns:out4="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentbatchresult"
    xmlns:out10="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionupdateallinput"
    xmlns:out41="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_information"
    xmlns:out19="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationbg"
    xmlns:out40="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationupdateallinputbg"
    xmlns:out18="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationupdateallinput"
    xmlns:out17="http://com/ibm/j2ca/fault"
    xmlns:out45="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentupdateallinput"
    xmlns:out16="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationlistbg"
    xmlns:out44="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationupdateallinputbg"
    xmlns:out15="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statuscontainer"
    xmlns:out14="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationlist"
    xmlns:out43="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationbatchresult"
    xmlns:out13="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationupdateallinput"
    xmlns:out42="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusbatchresult"
    xmlns:out50="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentlist"
    xmlns:out52="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationbatchresult"
    xmlns:out51="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transaction"
    xmlns:out54="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationbg"
    xmlns:out53="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentupdateallinputbg"
    xmlns:out56="wsdl.http://Remittance_JDBC_Common_Toolkit_Implementation/JDBCImport"
    xmlns:out55="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationlistbg"
    xmlns:out28="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactioncontainer"
    xmlns:out29="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statuslistbg"
    xmlns:out26="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationcontainer"
    xmlns:out27="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionlistbg"
    xmlns:out24="http://Remittance_JDBC_Common_Toolkit_Implementation/JDBCImport"
    xmlns:out25="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationupdateallinputbg"
    xmlns:out23="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_information"
    xmlns:out22="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationlistbg"
    xmlns:out21="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bulkoperationresult/updateallresult"
    xmlns:out20="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceremittance_transactionbatchresult"
    xmlns:out39="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceaccounting_informationlist"
    xmlns:out35="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationbg"
    xmlns:out36="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_informationcontainer"
    xmlns:out37="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationupdateallinput"
    xmlns:out38="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusupdateallinputbg"
    xmlns:out32="http://com/ibm/j2ca/fault/afcfault"
    xmlns:out31="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancedocumentbg"
    xmlns:out34="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancegeneral_informationcontainer"
    xmlns:out33="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/existsresult/existsresult"
    xmlns:out30="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittanceresource_statusbg"
    xmlns:out="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet24_entry_information"
    xmlns:out69="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historybg"
    xmlns:out68="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipbg"
    xmlns:out80="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historylist"
    xmlns:out81="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipcontainer"
    xmlns:out84="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_history"
    xmlns:out66="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historyupdateallinput"
    xmlns:out85="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historylistbg"
    xmlns:out67="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshiplistbg"
    xmlns:out82="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historycontainer"
    xmlns:out64="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historyupdateallinput"
    xmlns:out83="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipupdateallinputbg"
    xmlns:out65="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infoupdateallinput"
    xmlns:out88="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_info"
    xmlns:out62="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historylistbg"
    xmlns:out63="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipbatchresult"
    xmlns:out86="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historyupdateallinputbg"
    xmlns:out60="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historylist"
    xmlns:out87="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historybg"
    xmlns:out61="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshiplist"
    xmlns:out79="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historybatchresult"
    xmlns:out57="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_historyupdateallinputbg"
    xmlns:out58="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historycontainer"
    xmlns:out59="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_audit_history"
    xmlns:out70="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_approval_historybatchresult"
    xmlns:out75="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infolist"
    xmlns:out76="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infocontainer"
    xmlns:out77="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infobatchresult"
    xmlns:out78="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infolistbg"
    xmlns:out71="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationship"
    xmlns:out72="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infoupdateallinputbg"
    xmlns:out73="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_case_relationshipupdateallinput"
    xmlns:out74="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/bpm_sor_remittancet_remittance_case_infobg"
    xmlns:map="http://Remittance_JDBC_Common_Toolkit_Implementation/xslt/MappingRemittanceTransactionInsertReq_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="math str set date exsl map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'out56:createBpm_Sor_RemittanceRemittance_TransactionBGRequestMsg'"/>
            </xsl:attribute>
            <xsl:call-template name="map:MappingRemittanceTransactionInsertReq_req_12">
              <xsl:with-param name="body" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="body" mode="map:MappingRemittanceTransactionInsertReq_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:MappingRemittanceTransactionInsertReq_req_1">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out56:createBpm_Sor_RemittanceRemittance_TransactionBGRequestMsg'"/>
      </xsl:attribute>
      <out24:createBpm_Sor_RemittanceRemittance_TransactionBG>
        <out24:createBpm_Sor_RemittanceRemittance_TransactionBGInput>
          <Bpm_Sor_RemittanceRemittance_Transaction>
            <!-- a simple data mapping: "in5:insert/input1/id"(string) to "id"(string) -->
            <xsl:if test="in5:insert/input1/id">
              <xsl:element name="id">
                <xsl:value-of select="in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "in5:insert/input1/id"(string) to "gi_id"(string) -->
            <xsl:if test="in5:insert/input1/id">
              <xsl:element name="gi_id">
                <xsl:value-of select="in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "in5:insert/input1/id"(string) to "accounting_id"(string) -->
            <xsl:if test="in5:insert/input1/id">
              <xsl:element name="accounting_id">
                <xsl:value-of select="in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "in5:insert/input1/id"(string) to "t24_id"(string) -->
            <xsl:if test="in5:insert/input1/id">
              <xsl:element name="t24_id">
                <xsl:value-of select="in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "in5:insert/input1/id"(string) to "document_id"(string) -->
            <xsl:if test="in5:insert/input1/id">
              <xsl:element name="document_id">
                <xsl:value-of select="in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "in5:insert/input1/id"(string) to "rs_id"(string) -->
            <xsl:if test="in5:insert/input1/id">
              <xsl:element name="rs_id">
                <xsl:value-of select="in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <accounting_informationobj>
              <!-- a simple data mapping: "in5:insert/input1/account/in:standInformation"(string) to "standardize_information"(string) -->
              <xsl:if test="in5:insert/input1/account/in:standInformation">
                <xsl:element name="standardize_information">
                  <xsl:value-of select="in5:insert/input1/account/in:standInformation"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/id"(string) to "id"(string) -->
              <xsl:if test="in5:insert/input1/id">
                <xsl:element name="id">
                  <xsl:value-of select="in5:insert/input1/id"/>
                </xsl:element>
              </xsl:if>
            </accounting_informationobj>
            <documentobj>
              <!-- a simple data mapping: "in5:insert/input1/id"(string) to "id"(string) -->
              <xsl:if test="in5:insert/input1/id">
                <xsl:element name="id">
                  <xsl:value-of select="in5:insert/input1/id"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/document/in2:transferPurpose"(string) to "transfer_purpose"(string) -->
              <xsl:if test="in5:insert/input1/document/in2:transferPurpose">
                <xsl:element name="transfer_purpose">
                  <xsl:value-of select="in5:insert/input1/document/in2:transferPurpose"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/document/in2:commodityType"(string) to "commodity_type"(decimal) -->
              <xsl:if test="in5:insert/input1/document/in2:commodityType">
                <xsl:element name="commodity_type">
                  <xsl:value-of select="in5:insert/input1/document/in2:commodityType"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/document/in2:profileChecklist"(string) to "profile_check_list"(string) -->
              <xsl:if test="in5:insert/input1/document/in2:profileChecklist">
                <xsl:element name="profile_check_list">
                  <xsl:value-of select="in5:insert/input1/document/in2:profileChecklist"/>
                </xsl:element>
              </xsl:if>
            </documentobj>
            <general_informationobj>
              <!-- a simple mapping with no associated source:  to "branch_name"(string) -->
              <xsl:element name="branch_name">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "branch_code"(string) -->
              <xsl:element name="branch_code">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "customer_id"(decimal) -->
              <xsl:element name="customer_id">
                <xsl:text>0.0</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "customer_name"(string) -->
              <xsl:element name="customer_name">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "customer_email"(string) -->
              <xsl:element name="customer_email">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "customer_address"(string) -->
              <xsl:element name="customer_address">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "customer_level"(string) -->
              <xsl:element name="customer_level">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "enterprise_scope"(string) -->
              <xsl:element name="enterprise_scope">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "customer_type"(string) -->
              <xsl:element name="customer_type">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "enterprise_payment__approval"(string) -->
              <xsl:element name="enterprise_payment__approval">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "amount_number"(decimal) -->
              <xsl:element name="amount_number">
                <xsl:text>0.0</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "currency_type"(string) -->
              <xsl:element name="currency_type">
                <xsl:text>test</xsl:text>
              </xsl:element>
              <!-- a simple data mapping: "in5:insert/input1/id"(string) to "id"(string) -->
              <xsl:if test="in5:insert/input1/id">
                <xsl:element name="id">
                  <xsl:value-of select="in5:insert/input1/id"/>
                </xsl:element>
              </xsl:if>
            </general_informationobj>
            <resource_statusobj>
              <!-- a simple data mapping: "in5:insert/input1/id"(string) to "id"(string) -->
              <xsl:if test="in5:insert/input1/id">
                <xsl:element name="id">
                  <xsl:value-of select="in5:insert/input1/id"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/informationSource/in2:sourceReportResult"(string) to "source_report_results"(string) -->
              <xsl:if test="in5:insert/input1/informationSource/in2:sourceReportResult">
                <xsl:element name="source_report_results">
                  <xsl:value-of select="in5:insert/input1/informationSource/in2:sourceReportResult"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/informationSource/in2:transactionDate"(dateTime) to "transaction_date"(dateTime) -->
              <xsl:if test="in5:insert/input1/informationSource/in2:transactionDate">
                <xsl:element name="transaction_date">
                  <xsl:value-of select="in5:insert/input1/informationSource/in2:transactionDate"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/informationSource/in2:caseReportNo"(int) to "report_to_source_case_num"(decimal) -->
              <xsl:if test="in5:insert/input1/informationSource/in2:caseReportNo">
                <xsl:element name="report_to_source_case_num">
                  <xsl:value-of select="in5:insert/input1/informationSource/in2:caseReportNo"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "in5:insert/input1/informationSource/in2:sourceReportPurpose"(string) to "resource_report_purpose"(string) -->
              <xsl:if test="in5:insert/input1/informationSource/in2:sourceReportPurpose">
                <xsl:element name="resource_report_purpose">
                  <xsl:value-of select="in5:insert/input1/informationSource/in2:sourceReportPurpose"/>
                </xsl:element>
              </xsl:if>
            </resource_statusobj>
            <t24_entry_informationobj>
              <!-- a simple data mapping: "in5:insert/input1/id"(string) to "id"(string) -->
              <xsl:if test="in5:insert/input1/id">
                <xsl:element name="id">
                  <xsl:value-of select="in5:insert/input1/id"/>
                </xsl:element>
              </xsl:if>
            </t24_entry_informationobj>
          </Bpm_Sor_RemittanceRemittance_Transaction>
        </out24:createBpm_Sor_RemittanceRemittance_TransactionBGInput>
      </out24:createBpm_Sor_RemittanceRemittance_TransactionBG>
    </body>
  </xsl:template>

  <!-- This rule represents a type mapping: "body" to "body".  -->
  <xsl:template name="map:MappingRemittanceTransactionInsertReq_req_12">
    <xsl:param name="body"/>
    <out24:createBpm_Sor_RemittanceRemittance_TransactionBG>
      <out24:createBpm_Sor_RemittanceRemittance_TransactionBGInput>
        <Bpm_Sor_RemittanceRemittance_Transaction>
          <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "id"(string) -->
          <xsl:if test="$body/in5:insert/input1/id">
            <xsl:element name="id">
              <xsl:value-of select="$body/in5:insert/input1/id"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "gi_id"(string) -->
          <xsl:if test="$body/in5:insert/input1/id">
            <xsl:element name="gi_id">
              <xsl:value-of select="$body/in5:insert/input1/id"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "accounting_id"(string) -->
          <xsl:if test="$body/in5:insert/input1/id">
            <xsl:element name="accounting_id">
              <xsl:value-of select="$body/in5:insert/input1/id"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "t24_id"(string) -->
          <xsl:if test="$body/in5:insert/input1/id">
            <xsl:element name="t24_id">
              <xsl:value-of select="$body/in5:insert/input1/id"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "document_id"(string) -->
          <xsl:if test="$body/in5:insert/input1/id">
            <xsl:element name="document_id">
              <xsl:value-of select="$body/in5:insert/input1/id"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "rs_id"(string) -->
          <xsl:if test="$body/in5:insert/input1/id">
            <xsl:element name="rs_id">
              <xsl:value-of select="$body/in5:insert/input1/id"/>
            </xsl:element>
          </xsl:if>
          <accounting_informationobj>
            <!-- a simple data mapping: "$body/in5:insert/input1/account/in:standInformation"(string) to "standardize_information"(string) -->
            <xsl:if test="$body/in5:insert/input1/account/in:standInformation">
              <xsl:element name="standardize_information">
                <xsl:value-of select="$body/in5:insert/input1/account/in:standInformation"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "id"(string) -->
            <xsl:if test="$body/in5:insert/input1/id">
              <xsl:element name="id">
                <xsl:value-of select="$body/in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
          </accounting_informationobj>
          <documentobj>
            <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "id"(string) -->
            <xsl:if test="$body/in5:insert/input1/id">
              <xsl:element name="id">
                <xsl:value-of select="$body/in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/document/in2:transferPurpose"(string) to "transfer_purpose"(string) -->
            <xsl:if test="$body/in5:insert/input1/document/in2:transferPurpose">
              <xsl:element name="transfer_purpose">
                <xsl:value-of select="$body/in5:insert/input1/document/in2:transferPurpose"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/document/in2:commodityType"(string) to "commodity_type"(decimal) -->
            <xsl:if test="$body/in5:insert/input1/document/in2:commodityType">
              <xsl:element name="commodity_type">
                <xsl:value-of select="$body/in5:insert/input1/document/in2:commodityType"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/document/in2:profileChecklist"(string) to "profile_check_list"(string) -->
            <xsl:if test="$body/in5:insert/input1/document/in2:profileChecklist">
              <xsl:element name="profile_check_list">
                <xsl:value-of select="$body/in5:insert/input1/document/in2:profileChecklist"/>
              </xsl:element>
            </xsl:if>
          </documentobj>
          <general_informationobj>
            <!-- a simple mapping with no associated source:  to "branch_name"(string) -->
            <xsl:element name="branch_name">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "branch_code"(string) -->
            <xsl:element name="branch_code">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "customer_id"(decimal) -->
            <xsl:element name="customer_id">
              <xsl:text>0.0</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "customer_name"(string) -->
            <xsl:element name="customer_name">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "customer_email"(string) -->
            <xsl:element name="customer_email">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "customer_address"(string) -->
            <xsl:element name="customer_address">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "customer_level"(string) -->
            <xsl:element name="customer_level">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "enterprise_scope"(string) -->
            <xsl:element name="enterprise_scope">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "customer_type"(string) -->
            <xsl:element name="customer_type">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "enterprise_payment__approval"(string) -->
            <xsl:element name="enterprise_payment__approval">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "amount_number"(decimal) -->
            <xsl:element name="amount_number">
              <xsl:text>0.0</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "currency_type"(string) -->
            <xsl:element name="currency_type">
              <xsl:text>test</xsl:text>
            </xsl:element>
            <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "id"(string) -->
            <xsl:if test="$body/in5:insert/input1/id">
              <xsl:element name="id">
                <xsl:value-of select="$body/in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
          </general_informationobj>
          <resource_statusobj>
            <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "id"(string) -->
            <xsl:if test="$body/in5:insert/input1/id">
              <xsl:element name="id">
                <xsl:value-of select="$body/in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/informationSource/in2:sourceReportResult"(string) to "source_report_results"(string) -->
            <xsl:if test="$body/in5:insert/input1/informationSource/in2:sourceReportResult">
              <xsl:element name="source_report_results">
                <xsl:value-of select="$body/in5:insert/input1/informationSource/in2:sourceReportResult"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/informationSource/in2:transactionDate"(dateTime) to "transaction_date"(dateTime) -->
            <xsl:if test="$body/in5:insert/input1/informationSource/in2:transactionDate">
              <xsl:element name="transaction_date">
                <xsl:value-of select="$body/in5:insert/input1/informationSource/in2:transactionDate"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/informationSource/in2:caseReportNo"(int) to "report_to_source_case_num"(decimal) -->
            <xsl:if test="$body/in5:insert/input1/informationSource/in2:caseReportNo">
              <xsl:element name="report_to_source_case_num">
                <xsl:value-of select="$body/in5:insert/input1/informationSource/in2:caseReportNo"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$body/in5:insert/input1/informationSource/in2:sourceReportPurpose"(string) to "resource_report_purpose"(string) -->
            <xsl:if test="$body/in5:insert/input1/informationSource/in2:sourceReportPurpose">
              <xsl:element name="resource_report_purpose">
                <xsl:value-of select="$body/in5:insert/input1/informationSource/in2:sourceReportPurpose"/>
              </xsl:element>
            </xsl:if>
          </resource_statusobj>
          <t24_entry_informationobj>
            <!-- a simple data mapping: "$body/in5:insert/input1/id"(string) to "id"(string) -->
            <xsl:if test="$body/in5:insert/input1/id">
              <xsl:element name="id">
                <xsl:value-of select="$body/in5:insert/input1/id"/>
              </xsl:element>
            </xsl:if>
          </t24_entry_informationobj>
        </Bpm_Sor_RemittanceRemittance_Transaction>
      </out24:createBpm_Sor_RemittanceRemittance_TransactionBGInput>
    </out24:createBpm_Sor_RemittanceRemittance_TransactionBG>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
